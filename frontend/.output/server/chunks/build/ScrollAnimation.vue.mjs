import { mergeProps, useSSRContext } from 'vue';
import { ssrRenderAttrs, ssrRenderSlot } from 'vue/server-renderer';
import { s } from './_plugin-vue_export-helper.mjs';

const l={name:"ScrollAnimation",props:{delay:{type:Number,default:0},direction:{type:String,default:"up",validator:s=>["up","down","left","right"].includes(s)},disabled:{type:Boolean,default:false}},data(){return {isVisible:false}},mounted(){if(this.disabled){this.isVisible=true;return}if((void 0).matchMedia("(max-width: 768px)").matches||(void 0).connection&&(void 0).connection.effectiveType==="slow-2g"){this.isVisible=true;return}this.observer=new IntersectionObserver(s=>{s.forEach(t=>{t.isIntersecting&&(this.isVisible=true,this.observer.unobserve(t.target));});},{threshold:.1,rootMargin:"50px"}),this.observer.observe(this.$el);},beforeDestroy(){this.observer&&this.observer.disconnect();}};function f(s,t,n,d,e,m,i,h){t(`<div${ssrRenderAttrs(mergeProps({class:[e.disabled?"":"transition-all duration-300 ease-out",{"opacity-0":!i.isVisible&&!e.disabled,"opacity-100":i.isVisible||e.disabled,"translate-y-2":!i.isVisible&&e.direction==="up"&&!e.disabled,"translate-y-0":i.isVisible&&e.direction==="up"||e.disabled,"-translate-y-2":!i.isVisible&&e.direction==="down"&&!e.disabled,"translate-y-0":i.isVisible&&e.direction==="down"||e.disabled,"translate-x-2":!i.isVisible&&e.direction==="left"&&!e.disabled,"translate-x-0":i.isVisible&&e.direction==="left"||e.disabled,"-translate-x-2":!i.isVisible&&e.direction==="right"&&!e.disabled,"translate-x-0":i.isVisible&&e.direction==="right"||e.disabled}],style:e.disabled?{}:{transitionDelay:`${e.delay}ms`}},d))}>`),ssrRenderSlot(s.$slots,"default",{},null,t,n),t("</div>");}const r=l.setup;l.setup=(s,t)=>{const n=useSSRContext();return (n.modules||(n.modules=new Set)).add("components/ScrollAnimation.vue"),r?r(s,t):void 0};const x=s(l,[["ssrRender",f]]);

export { x };
//# sourceMappingURL=ScrollAnimation.vue.mjs.map
